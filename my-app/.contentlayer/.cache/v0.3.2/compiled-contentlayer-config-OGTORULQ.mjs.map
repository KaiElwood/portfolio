{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\n\nexport const Project = defineDocumentType(() => ({\n\tname: \"Project\",\n\tfilePathPattern: `portfolio/*.mdx`, // Type of file to parse (every mdx in projects folder)\n\tcontentType: 'mdx',\n\tfields: {\n        title: { type: 'string', description: \"The title of the project\", required: true },\n        date: { type: 'date', description: \"The date of the project\", required: true },\n        tags: { type: 'string', },\n\t\t\t\timgSrc: {\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tdescription: \"Image source url\",\n\t\t\t\t\trequired: true,\n\t\t\t\t\t},\n\t},\n\tcomputedFields: {\n\t  url: {\n\t\ttype: \"string\",\n\t\tresolve: (project) => `/${project._raw.flattenedPath}`,\n\t  },\n\t  slug: {\n\t\ttype: \"string\",\n\t\tresolve: (project) => project._raw.sourceFileName.replace(/\\.mdx/, ''),\n\t},\n\t},\n  }));\n\nexport const Post = defineDocumentType(() => ({\n  name: \"Post\",\n  filePathPattern: `blog/*.mdx`, // Type of file to parse (every mdx in posts folder)\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: \"string\",\n      description: \"The title of the post\",\n      required: true,\n    },\n    date: {\n      type: \"date\",\n      description: \"The date of the post\",\n      required: true,\n    },\n\tintro: {\n\t\ttype: \"string\",\n\t\tdescription: \"The intro for the post\",\n\t\trequired: true,\n\t  },\n\timgSrc: {\n\t\ttype: \"string\",\n\t\tdescription: \"Image source url\",\n\t\trequired: true,\n\t  },\n  },\n  computedFields: {\n    url: {\n      type: \"string\",\n      resolve: (post) => `/${post._raw.flattenedPath}`,\n    },\n\tslug: {\n\t\ttype: \"string\",\n\t\tresolve: (post) => post._raw.sourceFileName.replace(/\\.mdx/, ''),\n\t},\n  },\n}));\n\n// TODO: add an additional post type for projects, with a content directory path of /projects \u2013 \n// one will be for blogs, another for projects\nexport default makeSource({\n  contentDirPath: \"data\", // Source directory where the content is located\n  documentTypes: [Post, Project], // this is where the problem arises\n});"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAExC,IAAM,UAAU,mBAAmB,OAAO;AAAA,EAChD,MAAM;AAAA,EACN,iBAAiB;AAAA;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACD,OAAO,EAAE,MAAM,UAAU,aAAa,4BAA4B,UAAU,KAAK;AAAA,IACjF,MAAM,EAAE,MAAM,QAAQ,aAAa,2BAA2B,UAAU,KAAK;AAAA,IAC7E,MAAM,EAAE,MAAM,SAAU;AAAA,IAC5B,QAAQ;AAAA,MACP,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACV;AAAA,EACJ;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACN,MAAM;AAAA,MACN,SAAS,CAAC,YAAY,IAAI,QAAQ,KAAK;AAAA,IACtC;AAAA,IACA,MAAM;AAAA,MACP,MAAM;AAAA,MACN,SAAS,CAAC,YAAY,QAAQ,KAAK,eAAe,QAAQ,SAAS,EAAE;AAAA,IACtE;AAAA,EACA;AACC,EAAE;AAEG,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACH,OAAO;AAAA,MACN,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACT;AAAA,IACF,QAAQ;AAAA,MACP,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACT;AAAA,EACD;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,IAAI,KAAK,KAAK;AAAA,IACnC;AAAA,IACH,MAAM;AAAA,MACL,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,KAAK,KAAK,eAAe,QAAQ,SAAS,EAAE;AAAA,IAChE;AAAA,EACC;AACF,EAAE;AAIF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA;AAAA,EAChB,eAAe,CAAC,MAAM,OAAO;AAAA;AAC/B,CAAC;",
  "names": []
}

{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\n\nexport const Project = defineDocumentType(() => ({\n\tname: \"Project\",\n\tfilePathPattern: `projects/**/*.mdx`, // Type of file to parse (every mdx in all subfolders)\n\tcontentType: 'mdx',\n\tfields: {\n        title: { type: 'string', description: \"The title of the project\", required: true },\n        date: { type: 'string', description: \"The date of the project\", required: true },\n        tags: { type: 'string' },\n        image: { type: 'string' },\n\t},\n\tcomputedFields: {\n\t  url: {\n\t\ttype: \"string\",\n\t\tresolve: (Project) => `/projects/${Project._raw.flattenedPath}`,\n\t  },\n\t},\n\t// computedFields: {\n\t// \tid: {\n\t// \t  type: \"string\",\n\t// \t  resolve: (doc) => doc._raw.flattenedPath.replace(\"posts/\", \"\"),\n\t// \t},\n\t// \tslug: {\n\t// \t  type: \"string\",\n\t// \t  resolve: (doc) => doc._raw.flattenedPath.replace(\"posts/\", \"\"),\n\t// \t}\n\t// wordCount: {\n\t// \ttype: 'number',\n\t// \tresolve: (project) => project.body.raw.split(/\\s+/gu).length,\n\t//   },\n  }));\n\nexport const Post = defineDocumentType(() => ({\n  name: \"Post\",\n  filePathPattern: `**/*.mdx`, // Type of file to parse (every mdx in all subfolders)\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: \"string\",\n      description: \"The title of the post\",\n      required: true,\n    },\n    date: {\n      type: \"date\",\n      description: \"The date of the post\",\n      required: true,\n    },\n  },\n//   computedFields: {\n//     url: {\n//       type: \"string\",\n//       resolve: (post) => `/posts/${post._raw.flattenedPath}`,\n//     },\n//   },\n\tcomputedFields: {\n\t\turl: {\n\t\t\ttype: \"string\",\n\t\t\tresolve: (post) => `/posts/${post._raw.flattenedPath}`,\n\t\t},\n\t\tid: {\n\t\t\ttype: \"string\",\n\t\t\tresolve: (post) => post._raw.flattenedPath.replace(\"posts/\", \"\"),\n\t\t},\n\t\tslug: {\n\t\t\ttype: \"string\",\n\t\t\tresolve: (post) => post._raw.flattenedPath.replace(\"posts/\", \"\"),\n\t\t},\n\t},\n}));\n\n// TODO: add an additional post type for projects, with a content directory path of /projects \u2013 \n// one will be for blogs, another for projects\nexport default makeSource({\n  contentDirPath: \"data\", // Source directory where the content is located\n  documentTypes: [Post, Project],\n});\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAExC,IAAM,UAAU,mBAAmB,OAAO;AAAA,EAChD,MAAM;AAAA,EACN,iBAAiB;AAAA;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACD,OAAO,EAAE,MAAM,UAAU,aAAa,4BAA4B,UAAU,KAAK;AAAA,IACjF,MAAM,EAAE,MAAM,UAAU,aAAa,2BAA2B,UAAU,KAAK;AAAA,IAC/E,MAAM,EAAE,MAAM,SAAS;AAAA,IACvB,OAAO,EAAE,MAAM,SAAS;AAAA,EAC/B;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACN,MAAM;AAAA,MACN,SAAS,CAACA,aAAY,aAAaA,SAAQ,KAAK;AAAA,IAC/C;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcC,EAAE;AAEG,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,gBAAgB;AAAA,IACf,KAAK;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,UAAU,KAAK,KAAK;AAAA,IACxC;AAAA,IACA,IAAI;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,KAAK,KAAK,cAAc,QAAQ,UAAU,EAAE;AAAA,IAChE;AAAA,IACA,MAAM;AAAA,MACL,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,KAAK,KAAK,cAAc,QAAQ,UAAU,EAAE;AAAA,IAChE;AAAA,EACD;AACD,EAAE;AAIF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA;AAAA,EAChB,eAAe,CAAC,MAAM,OAAO;AAC/B,CAAC;",
  "names": ["Project"]
}
